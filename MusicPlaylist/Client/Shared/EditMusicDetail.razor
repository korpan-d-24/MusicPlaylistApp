@inject IMusicService MusicService
@inject IJSRuntime JSRuntime

@if (Song.Id == 0)
{
    <h3>Add a new Music to playlist</h3>
}
else
{
    <h3>Edit the song @Song.SongName</h3>
}
<EditForm Model="Song" OnSubmit="HendeSubmit">
    <div class="form-group">
        <label>Song Name</label>
        <InputText @bind-Value="Song.SongName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Album Name</label>
        <InputText @bind-Value="Song.AlbumName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Group Name</label>
        <InputText @bind-Value="Song.GroupName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Release Year</label>
        <InputText @bind-Value="Song.ReleaseYear" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>ULR</label>
        <InputText @bind-Value="Song.Url" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Styles</label><br />
        <InputRadioGroup @bind-Value="styleId" class="form-control">
            @foreach (var style in MusicService.Styles)
            {
                <InputRadio Value="@style.Id" /><span style="padding-left: 5px;">@style.NameOfStyle</span><br />
            }
        </InputRadioGroup>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    @*[Parameter]
        public MusicListApp.Shared.Music MusicToEdit { get; set; }*@
    [Parameter]
    public MusicPlaylist.Shared.Music Song { get; set; } = new MusicPlaylist.Shared.Music();
    int styleId = 1;

    protected override async Task OnParametersSetAsync()
    {
        await MusicService.GetStyles();
        styleId = Song.MusicStyle.Id;
    }

    async void HendeSubmit()
    {
        Song.MusicStyle = MusicService.Styles.FirstOrDefault(s => s.Id == styleId);
        await JSRuntime.InvokeVoidAsync("console.log", Song);

        if (Song.Id == 0)
        {
            await MusicService.CreateMusic(Song);
        }

        else
        {
            await MusicService.UpdateMusic(Song, Song.Id);
        }
    }

}
